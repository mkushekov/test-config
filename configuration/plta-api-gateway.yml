spring:
  main:
    web-application-type: reactive
  ## API SECURITY WITH KEYCLOAK PROVIDER
  security:
    oauth2:
      client:
        provider:
          keycloak:
            authorization-uri: ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/auth
            jwk-set-uri: ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/certs
            token-uri: ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/token
            user-info-authentication-method: header
            user-info-uri: ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username
        registration:
          plta:
            provider: keycloak
            authorization-grant-type: authorization_code
            client-id: ${app.config.keycloak.client-id}
            client-secret: ${app.config.keycloak.client-secret}
            provider: keycloak
            redirect-uri: http://localhost:4044/login/oauth2/code/keycloak
            scope: openid
      resourceserver:
        jwt:
          jwk-set-uri: ${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/certs

  ## GATEWAY CONFIGURATIONS
  cloud:
    gateway:
      routes:
        ## COURSE SERVICE
        - id: course
          uri: lb://course
          predicates:
            - Path=/course/**
          filters:
            - StripPrefix=1
        ## USER SERVICE
        - id: user
          uri: lb://user
          predicates:
            - Path=/user/**
          filters:
            - StripPrefix=1
        ## NOTIFICATION SERVICE
        - id: notification
          uri: lb://notification
          predicates:
            - Path=/notification/**
          filters:
            - StripPrefix=1
        ## FILE-STORAGE SERVICE
        - id: file-storage
          uri: lb://file-storage
          predicates:
            - Path=/file-storage/**
          filters:
            - StripPrefix=1

## SECURITY BASED CONFIGURATIONS
app:
  config:
    keycloak:
      url: http://10.25.72.24:4030/auth
      realm: plta-realm
      client-secret: EL3ERLfFCHIfshARAf5xskJxSFVUyHew
      client-id: plta-client-id

server:
  port: 4044

eureka:
  client:
    service-url:
      defaultZone: http://localhost:4041/eureka
    fetch-registry: true
    register-with-eureka: true
  instance:
    hostname: localhost
    prefer-ip-address: true

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG